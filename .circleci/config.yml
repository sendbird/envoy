version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.3
  aws-cli: circleci/aws-cli@2.0.6

workflows:
  build:
    jobs:
      - build:
          name: build_arm64
          filters:
            tags:
              only:
                - /^v.*/
            branches:
              ignore:
                - /.*/
          context: circleci-soda-bot
          machine-type: arm64
      - build:
          name: build_x64
          filters:
            tags:
              only:
                - /^v.*/
            branches:
              ignore:
                - /.*/
          context: circleci-soda-bot
          machine-type: amd64
      - upload_docker:
          filters:
            tags:
              only:
                - /^v.*/
            branches:
              ignore:
                - /.*/
          context: circleci-soda-bot
          requires:
            - build_arm64
            - build_x64
      

executors:
  arm64:
    machine:
      resource_class: arm.2xlarge
      image: ubuntu-2204:current
  amd64:
    machine:
      resource_class: 2xlarge
      image: ubuntu-2204:current


jobs:
  upload_docker:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          profile-name: default
          configure-default-region: false

      - run:
          name: Set environment
          command: |
            echo 'export AWS_REGION=us-east-1' >> $BASH_ENV
            echo 'export AWS_ROLE_ARN="$AWS_ROLE_CI_OPS"' >> $BASH_ENV
            echo "export ECR_ACCOUNT_NUM=$(echo $AWS_ROLE_CI_OPS | grep -Eo '[0-9]{12}')" >> $BASH_ENV
            echo 'export ECR_HOST=${ECR_ACCOUNT_NUM}.dkr.ecr.${AWS_REGION}.amazonaws.com' >> $BASH_ENV

      - run:
          name: Set AWS credentials
          command: |
            mkdir -p ~/.aws
            echo '
            [profile circleci]
            source_profile=default
            role_arn='"$AWS_ROLE_CI_OPS"'
            ' >> ~/.aws/config

      - run:
          name: Set envoy build environment
          command: |
            export VERSION=$(echo $CIRCLE_TAG | sed 's/v//')
            echo "export DOCKER_IMAGE_PREFIX=mesg/envoy" >> $BASH_ENV
            echo "export DOCKER_REGISTRY=${ECR_HOST}" >> $BASH_ENV
            echo "export DOCKERHUB_USERNAME=AWS" >> $BASH_ENV
            echo "export CI_BRANCH=refs/heads/release/v${VERSION}" >> $BASH_ENV
            echo "export CI_SHA1=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export ENVOY_DOCKER_IN_DOCKER=1" >> $BASH_ENV
            echo "export ENVOY_VERSION=${VERSION}" >> $BASH_ENV
            cat $BASH_ENV
            echo "export DOCKERHUB_PASSWORD=$(aws ecr get-login-password --region us-east-1 --profile circleci)" >> $BASH_ENV

      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: copy files from previous steps
          command: |
            mkdir -p /tmp/envoy-docker-build/envoy/x64/bin
            mkdir -p /tmp/envoy-docker-build/envoy/arm64/bin
            cp /tmp/workspace/release_archive/release_x64.tar.zst /tmp/envoy-docker-build/envoy/x64/bin/release.tar.zst
            cp /tmp/workspace/release_archive/release_arm64.tar.zst /tmp/envoy-docker-build/envoy/arm64/bin/release.tar.zst

      - run:
          name: Build docker image
          command: ./ci/run_envoy_docker.sh 'ci/do_ci.sh docker'

  build:
    parameters:
      machine-type:
        type: executor
    executor: << parameters.machine-type >>

    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          profile-name: default
          configure-default-region: false

      - run:
          name: Set environment
          command: |
            echo 'export AWS_REGION=us-east-1' >> $BASH_ENV
            echo 'export AWS_ROLE_ARN="$AWS_ROLE_CI_OPS"' >> $BASH_ENV
            echo "export ECR_ACCOUNT_NUM=$(echo $AWS_ROLE_CI_OPS | grep -Eo '[0-9]{12}')" >> $BASH_ENV
            echo 'export ECR_HOST=${ECR_ACCOUNT_NUM}.dkr.ecr.${AWS_REGION}.amazonaws.com' >> $BASH_ENV

      - run:
          name: Set AWS credentials
          command: |
            mkdir -p ~/.aws
            echo '
            [profile circleci]
            source_profile=default
            role_arn='"$AWS_ROLE_CI_OPS"'
            ' >> ~/.aws/config

      - run:
          name: Set envoy build environment
          command: |
            export VERSION=$(echo $CIRCLE_TAG | sed 's/v//')
            echo "export DOCKER_IMAGE_PREFIX=mesg/envoy" >> $BASH_ENV
            echo "export DOCKER_REGISTRY=${ECR_HOST}" >> $BASH_ENV
            echo "export DOCKERHUB_USERNAME=AWS" >> $BASH_ENV
            echo "export CI_BRANCH=refs/heads/release/v${VERSION}" >> $BASH_ENV
            echo "export CI_SHA1=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export ENVOY_DOCKER_IN_DOCKER=1" >> $BASH_ENV
            echo "export ENVOY_VERSION=${VERSION}" >> $BASH_ENV
            cat $BASH_ENV
            echo "export DOCKERHUB_PASSWORD=$(aws ecr get-login-password --region us-east-1 --profile circleci)" >> $BASH_ENV

      - run:
          name: Building envoy
          command: |
            ./ci/run_envoy_docker.sh 'ci/do_ci.sh release.server_only'
            mkdir release_archive
            ARCH=$(uname -m)
            if [[ ${ARCH} == "x86_64" ]]; then
              cp /tmp/envoy-docker-build/envoy/x64/bin/release.tar.zst release_archive/release_x64.tar.zst
            else
              cp /tmp/envoy-docker-build/envoy/arm64/bin/release.tar.zst release_archive/release_arm64.tar.zst
            fi

      - persist_to_workspace:
          root: .
          paths: release_archive